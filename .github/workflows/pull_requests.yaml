# Build and test all pull requests
name: Pull Requests

on: [pull_request]

jobs:
  build:
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest", "macos-latest"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Bash 4 on Mac
        if: matrix.os == 'macos-latest'
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          brew update

          brew install bash
          brew install gnu-sed

          echo "/usr/local/bin" >> $GITHUB_PATH
          echo "$(brew --prefix)/opt/gnu-sed/libexec/gnubin" >> $GITHUB_PATH
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.16.x
      - uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Unit Test
        run: make test
      - name: Template Unit Tests
        run: make test-templates
      - name: Build
        run: make build
      - name: Lint
        run: make check
      - name: Check that 'func.yaml schema' is up-to-date
        if: matrix.os != 'windows-latest'
        run: make schema-check

  integration-test:
    needs: build
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
      - name: Install Podman
        run: |
          . /etc/os-release
          echo "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_${VERSION_ID}/ /" | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
          curl -L "https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_${VERSION_ID}/Release.key" | sudo apt-key add -
          sudo apt-get update
          sudo apt-get -y upgrade
          sudo apt-get -y install podman
          podman info
      - name: Install Binaries
        run: ./hack/binaries.sh
      - name: Allocate Cluster
        run: ./hack/allocate.sh
      - name: Local Registry Routing
        run: ./hack/registry.sh
      - name: Verify Configuration
        run: ./hack/test.sh
      - name: Integration Test Podman
        run: ./hack/test-integration-podman.sh
      - name: Integration Test
        run: make test-integration

  e2e-test:
    needs: integration-test
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: "^1.16"
      - name: Build
        run: make build
      - name: Install Binaries
        run: ./hack/binaries.sh
      - name: Allocate Cluster
        run: ./hack/allocate.sh
      - name: Local Registry an Routes (CI)
        run: ./hack/registry.sh
      - name: Verify Configuration
        run: ./hack/test.sh
      - name: E2E Test
        run: make test-e2e
