
name: Func Matrix Test

on:
  schedule:
    - cron: '0 * * * 1,3,5'

jobs:
  test:
    name: Func Matrix Test
    continue-on-error: true
    strategy:
      matrix:
        os:
          - "ubuntu-latest"
          - "windows-latest"
          - "macos-latest"
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set Environment Variables
        run: |
          echo "KUBECONFIG=${{ github.workspace }}/hack/bin/kubeconfig.yaml" >> "$GITHUB_ENV"
          echo "PATH=${{ github.workspace }}/hack/bin:$PATH" >> "$GITHUB_ENV"
      - name: Install Bash 4 on Mac
        if: matrix.os == 'macos-latest'
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          brew update

          brew install bash
          brew install gnu-sed

          echo "/usr/local/bin" >> $GITHUB_PATH
          echo "$(brew --prefix)/opt/gnu-sed/libexec/gnubin" >> $GITHUB_PATH
      - run: git config --global core.autocrlf false # TODO: Document why this is required (if at all):
      - uses: actions/checkout@v3
      - uses: ./.github/composite/go-setup
      - name: Install Binaries
        run: ./hack/install-binaries.sh
      - name: Allocate Cluster
        run: |
          attempt=0
          max_attempts=5
          until [ $attempt -ge $max_attempts ]
          do
            attempt=$((attempt+1))
            echo "------------------ Attempt $attempt ------------------"
            ./hack/allocate.sh && break
            echo "------------------ failed, retrying... ------------------"
            if [ $attempt -ge $max_attempts ]; then
              echo "------------------ max # of retries reached, exiting ------------------"
              exit 1
            fi
            ./hack/delete.sh
            echo "------------------ sleep for 5 minutes ------------------"
            sleep 300
          done
          echo "------------------ finished! attempt $attempt ------------------"
      - name: Local Registry
        run: ./hack/registry.sh
      # TODO: if matrix.builder == host
      #         if matrix.runtime == node: Setup node, python, quarkus
      #         if matrix.runtime == python: Setup python, quarkus
      #         if matrix.runtime == quarkus: Setup quarkus
      #         if matrix.runtime == springboot: Setup springboot
      #         if matrix.runtime == typescript: Setup typescript
      #         if matrix.runtime == rust: Setup rust
      #
      # Example:
      # - uses: actions/setup-java@v1
      #   if: matrix.builder == 'host' && (matrix.runtime == 'quarkus' || matrix.runtime == 'springboot')
      #   with:
      #     java-version: 21
      #
      - name: "E2E Matrix - OS: ${{ matrix.OS }}"
        env:
          FUNC_E2E_MATRIX_RUNTIMES: "go,node,python,quarkus,springboot,typescript"
          FUNC_E2E_MATRIX_BUILDERS: "host,pack,s2i"
        run: make test-e2e
      - uses: codecov/codecov-action@v4
        with:
          files: ./coverage.txt
          flags: e2e matrix-${{ matrix.runtime }}-${{ matrix.builder }}
          fail_ci_if_error: true
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}
